<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zimax.mcrs.monitor.mapper.AccessMonitorMapper">

    <!--    <insert id="addSoftwareRunStatus" parameterType="com.zimax.mcrs.monitor.pojo.SoftwareRunStatus">-->
    <!--        insert into mon_soft_status-->
    <!--        values (#{softwareRunId}, #{equipmentId}, #{APPId}, #{deviceName}, #{deviceSoType},-->
    <!--                #{deviceSoRunStatus}, #{cpuRate}, #{storageRate}, #{errorRate}, #{createTime})-->
    <!--    </insert>-->

    <!--    <insert id="addEquipmentStatus" parameterType="com.zimax.mcrs.monitor.pojo.EquipmentStatus">-->
    <!--        insert into mon_equipment_status-->
    <!--        values (#{equipmentStatusId}, #{equipmentId}, #{accessType}, #{accessStatus}, #{antennaStatus}, #{createTime})-->
    <!--    </insert>-->

    <!--    <insert id="addDeviceAbn" parameterType="com.zimax.mcrs.monitor.pojo.DeviceAbn">-->
    <!--        insert into mon_device_abn-->
    <!--        values (#{deviceAbnId}, #{equipmentId}, #{APPId}, #{deviceName}, #{useProcess}, #{warningTitle},#{warningType}, #{warningLevel}, #{warningContent}, #{occurTime}, #{remarks}, #{createTime})-->
    <!--    </insert>-->

    <!--添加监控信息-->
    <insert id="addMonitorDeviceStatus"
            parameterType="com.zimax.mcrs.monitor.pojo.monDeviceStatus.MonitorDeviceHistory">
        insert into mon_device_history
        values (#{appId}, #{accessType}, #{accessStatus}, #{deviceSoftwareStatus},
                #{antennaStatus}, #{warningContent}, #{cpuRate}, #{storageRate}, #{errorRate}, #{occurrenceTime})
    </insert>
    <!--添加监控实时信息-->
    <insert id="addMonitorDeviceReal" parameterType="com.zimax.mcrs.monitor.pojo.monDeviceStatus.MonitorDeviceStatus">
        insert into mon_device_real
        values (MD5(#{appId}), #{accessType}, #{accessStatus},
                #{deviceSoftwareStatus}, #{antennaStatus},
                #{warningContent},#{warnGrade},#{warnType},#{cpuRate}, #{storageRate}, #{errorRate}, #{occurrenceTime})
    </insert>
    <update id="updateMonitorDeviceRealExist"
            parameterType="com.zimax.mcrs.monitor.pojo.monDeviceStatus.MonitorDeviceStatus">
        UPDATE mon_device_real
        SET device_exists = #{deviceExists}
        WHERE app_id = #{appId}
    </update>

    <update id="updateMonitorDeviceStatus"
            parameterType="com.zimax.mcrs.monitor.pojo.monDeviceStatus.MonitorDeviceStatus">
        UPDATE mon_device_real
        SET access_type            = #{accessType},
            access_status          = #{accessStatus},
            device_software_status = #{deviceSoftwareStatus},
            antenna_status         = #{antennaStatus},
            warning_content        = #{warningContent},
            warn_grade = #{warnGrade},
            warn_type = #{warnType},
            cpu_rate               = #{cpuRate},
            storage_rate           = #{storageRate},
            error_rate             = #{errorRate},
            occurrence_time        = #{occurrenceTime}
        where app_id = #{appId}
    </update>
    <!--device_warning_num     = CASE
                                             WHEN #{warningContent} = '' THEN device_warning_num
                                             WHEN #{warningContent} IS NULL THEN device_warning_num
                                             ELSE device_warning_num + 1 END-->
    <delete id="deleteDeviceStatus" parameterType="string">
        delete
        from mon_device_real
        where app_id = #{appId}
    </delete>

    <select id="groupQueryBydate" resultType="com.zimax.mcrs.monitor.pojo.vo.GroupByDate">
        select date_format(t1.equipment_exchange_time, '%Y-%m-%d') as recordDate,
               sum(CASE abn_type WHEN "101" THEN 1 ELSE 0 END)     AS "activeWarn",
               sum(CASE abn_type WHEN "100" THEN 1 ELSE 0 END)     AS "hardWarn"
        from log_log t1
        where t1.log_type = 108
        group by date_format(t1.equipment_exchange_time, '%Y-%m-%d')
        ORDER BY t1.equipment_exchange_time desc limit 0,7
    </select>
    <!--    告警信息-->
    <select id="getWarnInfo" resultType="com.zimax.mcrs.monitor.pojo.vo.WarnTotalInfo">
        select count(*)                                            as "warnTotal",
               sum(CASE warning_type WHEN "101" THEN 1 ELSE 0 END) AS "activeWarn",
               sum(CASE warning_type WHEN "100" THEN 1 ELSE 0 END) AS "hardWarn"
        from mon_device_abn
    </select>

    <select id="getWarnByproduction" resultType="com.zimax.mcrs.monitor.pojo.vo.GroupByProduction">
        select b.process_name name, count(b.process_name) value
        from mon_device_abn a
            left JOIN base_process_info b
        on a.use_process=b.process_id
        group by b.process_name
    </select>

    <select id="getEqiOnline" resultType="Int">
        select count(*) as eqiOnline
        from mon_device_real
        where device_software_status = "101"
    </select>

    <select id="getAccessOnline" resultType="Int">
        select count(*) as accessOnline
        from mon_device_real
        where access_status = "101"
    </select>

    <select id="queryProcessAndeqi" resultType="com.zimax.mcrs.monitor.pojo.vo.GroupByProduction">
        SELECT bpi.process_name name, count(bpi.process_name) value
        FROM eqi_equipment AS eqi
            LEFT JOIN base_access_info AS bai
        ON eqi.acc_point_res_id = bai.acc_point_res_id
            LEFT JOIN base_process_info AS bpi
            ON bai.process_id = bpi.process_id
        group by bpi.process_name

    </select>
    <!--工厂对应工序的设备数量-->
    <select id="queryFactoryId" resultType="int">
        SELECT bfi.factory_id
        FROM eqi_equipment AS eqi
                 LEFT JOIN base_access_info AS bai ON eqi.acc_point_res_id = bai.acc_point_res_id
                 LEFT JOIN base_process_info AS bpi
                           ON bai.process_id = bpi.process_id
                 LEFT JOIN base_factory_info AS bfi
                           ON bpi.factory_id = bfi.factory_id
        group by bfi.factory_id
    </select>

    <select id="queryProcessName" resultType="String">
        SELECT bpi.process_name processName
        FROM eqi_equipment AS eqi
                 LEFT JOIN base_access_info AS bai ON eqi.acc_point_res_id = bai.acc_point_res_id
                 LEFT JOIN base_process_info AS bpi
                           ON bai.process_id = bpi.process_id
        group by bpi.process_name
    </select>
    <select id="queryFactoryAndProcess" resultType="com.zimax.mcrs.monitor.pojo.vo.ProcessOnfactory">
        SELECT bfi.factory_id,
               bfi.factory_name,
               bpi.process_name         processName,
               count(bpi.process_id) as total,
               bpi.process_id
        FROM eqi_equipment AS eqi
                 LEFT JOIN base_access_info AS bai ON eqi.acc_point_res_id = bai.acc_point_res_id
                 LEFT JOIN base_process_info AS bpi
                           ON bai.process_id = bpi.process_id
                 LEFT JOIN base_factory_info AS bfi
                           ON bpi.factory_id = bfi.factory_id
        group by bpi.process_id
    </select>

    <select id="checkDevice" parameterType="map"
            resultType="com.zimax.mcrs.monitor.pojo.monDeviceStatus.MonitorDeviceStatus">
        SELECT *
        FROM mon_device_real
        WHERE device_exists != 1 AND device_name =#{deviceName}
    </select>

    <!--    <update id="updateMonitorDeviceStatus" >-->
    <!--        update mon_device_real-->
    <!--        <set>-->
    <!--            <trim prefix="access_type = case" suffix="end,">-->
    <!--                <foreach collection="list" item="item">-->
    <!--                    <if test="item.accessType != null">-->
    <!--                        when device_name=#{item.device_name} then #{item.accessType}-->
    <!--                    </if>-->
    <!--                    <if test="item.accessType == null">-->
    <!--                        when device_name=#{item.device_name} then access_type &#45;&#45; 若传入的属性为null，则保持数据库原值-->
    <!--                    </if>-->
    <!--                </foreach>-->
    <!--            </trim>-->
    <!--        </set>-->
    <!--        where `device_name` in-->
    <!--        <foreach collection="list" item="item" index="index" separator="," open="(" close=")">-->
    <!--            #{item.device_name}-->
    <!--        </foreach>-->
    <!--    </update>-->
    <insert id="addDeviceAlarm"
            parameterType="com.zimax.mcrs.monitor.pojo.monDeviceStatus.MonitorDeviceAlarm">
        insert into mon_device_alarm
        values (#{deviceAlarmId}, #{appId}, #{accessStatus}, #{deviceSoftwareStatus}, #{antennaStatus},#{warnGrade},
                #{warnType},#{occurrenceTime},#{warningContent},#{accessType})
    </insert>

    <select id="findAlarmEvent" resultType="com.zimax.mcrs.warn.pojo.AlarmEventVo">
        SELECT
            alarm_event_title,
            alarm_type,
            alarm_level,
            alarm_event_content
        FROM
            war_alarm_event
        WHERE alarm_event_id = #{warningContent}
    </select>

</mapper>





